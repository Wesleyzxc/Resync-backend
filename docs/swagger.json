{
  "swagger": "2.0",
  "info": {
    "description": "This is the API for Resync Technical Test",
    "version": "0",
    "title": "Resync API",
    "contact": { "email": "wesleykok-@hotmail.com" },
    "license": {
      "name": "Apache 2.0",
      "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
    }
  },
  "host": "localhost:3000",
  "basePath": "",
  "tags": [
    {
      "name": "User",
      "description": "Operations about user"
    },
    { "name": "Organisation", "description": "Access to organisations" }
  ],
  "schemes": ["http"],
  "paths": {
    "/register": {
      "post": {
        "tags": ["User"],
        "summary": "Register a user",
        "description": "",
        "operationId": "register",
        "consumes": ["application/json"],
        "produces": ["application/json", "application/xml"],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Registering a user",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Registration"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Logged in successful",
            "content": {
              "application/json": {
                "schema": { "message": "Yay! You've successfully registered your user account :)" }
              }
            }
          },
          "400": { "description": "Error creating new user" }
        }
      }
    },
    "/login": {
      "post": {
        "tags": ["User"],
        "summary": "Login as a user",
        "description": "",
        "operationId": "login",
        "consumes": ["application/json"],
        "produces": ["application/json", "application/xml"],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Logging in as a user",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Login"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Logged in successful",
            "headers": {
              "token": {
                "type": "string",
                "description": "token to be used"
              },
              "token_type": {
                "type": "string",
                "description": "Token type bearer"
              },
              "expiresIn": {
                "type": "integer",
                "description": "Time in seconds before token expires"
              }
            },
            "401": { "description": "Invalid login" }
          }
        }
      }
    },
    "/org/select": {
      "get": {
        "tags": ["Organisation"],
        "summary": "Gets all organisations",
        "description": "For valid response, a token is required",
        "operationId": "selectOrganisation",
        "produces": ["application/json", "application/xml"],
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "description": "Token of user",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Logged in successful",
            "content": {
              "application/json": {
                "schema": {
                  "results": [
                    {
                      "id": 1,
                      "organisation_name": "Organisation Name",
                      "owner": "Owner name",
                      "address": "Address",
                      "city": "City",
                      "state": "State",
                      "country": "Country",
                      "submission_date": "2020-09-20 05:00:00.000"
                    }
                  ]
                }
              }
            }
          },
          "401": { "description": "Invalid authorization header" },
          "500": { "description": "Database error" }
        }
      }
    },
    "/org/add": {
      "post": {
        "tags": ["Organisation"],
        "summary": "Adds a new organisation",
        "description": "For valid response, a token is required",
        "operationId": "addOrganisation",
        "produces": ["application/json", "application/xml"],
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "description": "Token of user",
            "required": true,
            "type": "string"
          },
          {
            "name": "organisation_name",
            "in": "header",
            "description": "Name of organisation",
            "required": true,
            "type": "string"
          },
          {
            "name": "owner",
            "in": "header",
            "description": "Name of owner",
            "required": true,
            "type": "string"
          },
          {
            "name": "address",
            "in": "header",
            "description": "Address",
            "required": false,
            "type": "string"
          },
          {
            "name": "city",
            "in": "header",
            "description": "City",
            "required": false,
            "type": "string"
          },
          {
            "name": "state",
            "in": "header",
            "description": "State",
            "required": false,
            "type": "string"
          },
          {
            "name": "country",
            "in": "header",
            "description": "Country",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "New organisation added",
            "content": {
              "application/json": {
                "schema": {
                  "message": "New organisation added"
                }
              }
            }
          },
          "400": { "description": "Invalid header or existing organisation" },
          "401": { "description": "Invalid or missing token" }
        }
      }
    },
    "/org/update": {
      "put": {
        "tags": ["Organisation"],
        "summary": "Updates an existing organisation",
        "description": "For valid response, a token is required",
        "operationId": "addOrganisation",
        "produces": ["application/json", "application/xml"],
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "description": "Token of user",
            "required": true,
            "type": "string"
          },
          {
            "name": "organisation_name",
            "in": "header",
            "description": "Name of organisation",
            "required": true,
            "type": "string"
          },
          {
            "name": "owner",
            "in": "header",
            "description": "Name of owner",
            "required": true,
            "type": "string"
          },
          {
            "name": "address",
            "in": "header",
            "description": "Address",
            "required": false,
            "type": "string"
          },
          {
            "name": "city",
            "in": "header",
            "description": "City",
            "required": false,
            "type": "string"
          },
          {
            "name": "state",
            "in": "header",
            "description": "State",
            "required": false,
            "type": "string"
          },
          {
            "name": "country",
            "in": "header",
            "description": "Country",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": { "description": "Saved changes" },
          "400": { "description": "No values to update" },
          "401": { "description": "Invalid or missing token" },
          "404": { "description": "This entry does not exist" }
        }
      }
    }
  },
  "/org/delete": {
    "post": {
      "tags": ["Organisation"],
      "summary": "Deletes a new organisation",
      "description": "For valid response, a token is required",
      "operationId": "deleteOrganisation",
      "produces": ["application/json", "application/xml"],
      "parameters": [
        {
          "name": "authorization",
          "in": "header",
          "description": "Token of user",
          "required": true,
          "type": "string"
        },
        {
          "name": "id",
          "in": "header",
          "description": "id of entry",
          "required": true,
          "type": "string"
        }
      ],
      "responses": {
        "200": {
          "description": "Organisation deleted",
          "content": {
            "application/json": {
              "schema": {
                "message": "Entry is deleted"
              }
            }
          }
        },
        "400": { "description": "Missing id" },
        "401": { "description": "Invalid or missing token" },
        "404": { "description": "Entrry not found." }
      }
    }
  },
  "definitions": {
    "Login": {
      "type": "object",
      "properties": {
        "email": { "type": "string" },
        "password": { "type": "string" }
      },
      "xml": { "name": "Login" }
    },
    "Registration": {
      "type": "object",
      "properties": {
        "id": { "type": "integer", "format": "int64" },
        "firstName": { "type": "string" },
        "lastName": { "type": "string" },
        "email": { "type": "string" },
        "password": { "type": "string" },
        "created_at": { "type": "string", "format": "date-time" }
      },
      "xml": { "name": "User" }
    },
    "Organisation": {
      "type": "object",
      "properties": {
        "id": { "type": "integer" },
        "organisation_name": { "type": "string" },
        "owner": { "type": "string" },
        "address": { "type": "string" },
        "city": { "type": "string" },
        "state": { "type": "string" },
        "country": { "type": "string" },
        "created_at": { "type": "string", "format": "date-time" }
      },
      "xml": { "name": "Organisation" }
    }
  }
}
